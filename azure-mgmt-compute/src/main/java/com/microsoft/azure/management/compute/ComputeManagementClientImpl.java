/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.microsoft.azure.management.compute;

import com.microsoft.rest.AzureClient;
import com.microsoft.rest.AzureServiceClient;
import com.microsoft.rest.credentials.ServiceClientCredentials;
import com.microsoft.rest.CustomHeaderInterceptor;
import com.squareup.okhttp.OkHttpClient;
import java.util.UUID;
import retrofit.Retrofit;

/**
 * Initializes a new instance of the ComputeManagementClient class.
 */
public class ComputeManagementClientImpl extends AzureServiceClient implements ComputeManagementClient {
    /** The URI used as the base for all cloud service requests. */
    private String baseUri;
    /** the {@link AzureClient} used for long running operations .*/
    private AzureClient azureClient;

    /**
     * Gets the URI used as the base for all cloud service requests.
     * @return The BaseUri value.
     */
    public String getBaseUri() {
        return this.baseUri;
    }

    /**
     * Gets the {@link AzureClient} used for long running operations.
     * @return the azure client;
     */
    public AzureClient getAzureClient() {
        return this.azureClient;
    }

    /** The management credentials for Azure. */
    private ServiceClientCredentials credentials;

    /**
     * Gets The management credentials for Azure.
     *
     * @return the credentials value.
     */
    public ServiceClientCredentials getCredentials() {
        return this.credentials;
    }

    /** Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. */
    private String subscriptionId;

    /**
     * Gets Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     *
     * @return the subscriptionId value.
     */
    public String getSubscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Sets Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     *
     * @param subscriptionId the subscriptionId value.
     */
    public void setSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
    }

    /** Client Api Version. */
    private String apiVersion;

    /**
     * Gets Client Api Version.
     *
     * @return the apiVersion value.
     */
    public String getApiVersion() {
        return this.apiVersion;
    }

    /** Gets or sets the preferred language for the response. */
    private String acceptLanguage;

    /**
     * Gets Gets or sets the preferred language for the response.
     *
     * @return the acceptLanguage value.
     */
    public String getAcceptLanguage() {
        return this.acceptLanguage;
    }

    /**
     * Sets Gets or sets the preferred language for the response.
     *
     * @param acceptLanguage the acceptLanguage value.
     */
    public void setAcceptLanguage(String acceptLanguage) {
        this.acceptLanguage = acceptLanguage;
    }

    /** The retry timeout for Long Running Operations. */
    private int longRunningOperationRetryTimeout;

    /**
     * Gets The retry timeout for Long Running Operations.
     *
     * @return the longRunningOperationRetryTimeout value.
     */
    public int getLongRunningOperationRetryTimeout() {
        return this.longRunningOperationRetryTimeout;
    }

    /**
     * Sets The retry timeout for Long Running Operations.
     *
     * @param longRunningOperationRetryTimeout the longRunningOperationRetryTimeout value.
     */
    public void setLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout) {
        this.longRunningOperationRetryTimeout = longRunningOperationRetryTimeout;
    }

    /**
     * Gets the AvailabilitySetsOperations object to access its operations.
     * @return the availabilitySets value.
     */
    public AvailabilitySetsOperations getAvailabilitySets() {
        return new AvailabilitySetsOperationsImpl(this.retrofitBuilder.build(), this);
    }

    /**
     * Gets the VirtualMachineExtensionImagesOperations object to access its operations.
     * @return the virtualMachineExtensionImages value.
     */
    public VirtualMachineExtensionImagesOperations getVirtualMachineExtensionImages() {
        return new VirtualMachineExtensionImagesOperationsImpl(this.retrofitBuilder.build(), this);
    }

    /**
     * Gets the VirtualMachineExtensionsOperations object to access its operations.
     * @return the virtualMachineExtensions value.
     */
    public VirtualMachineExtensionsOperations getVirtualMachineExtensions() {
        return new VirtualMachineExtensionsOperationsImpl(this.retrofitBuilder.build(), this);
    }

    /**
     * Gets the VirtualMachineImagesOperations object to access its operations.
     * @return the virtualMachineImages value.
     */
    public VirtualMachineImagesOperations getVirtualMachineImages() {
        return new VirtualMachineImagesOperationsImpl(this.retrofitBuilder.build(), this);
    }

    /**
     * Gets the UsageOperations object to access its operations.
     * @return the usage value.
     */
    public UsageOperations getUsage() {
        return new UsageOperationsImpl(this.retrofitBuilder.build(), this);
    }

    /**
     * Gets the VirtualMachineSizesOperations object to access its operations.
     * @return the virtualMachineSizes value.
     */
    public VirtualMachineSizesOperations getVirtualMachineSizes() {
        return new VirtualMachineSizesOperationsImpl(this.retrofitBuilder.build(), this);
    }

    /**
     * Gets the VirtualMachinesOperations object to access its operations.
     * @return the virtualMachines value.
     */
    public VirtualMachinesOperations getVirtualMachines() {
        return new VirtualMachinesOperationsImpl(this.retrofitBuilder.build(), this);
    }

    /**
     * Gets the VirtualMachineScaleSetsOperations object to access its operations.
     * @return the virtualMachineScaleSets value.
     */
    public VirtualMachineScaleSetsOperations getVirtualMachineScaleSets() {
        return new VirtualMachineScaleSetsOperationsImpl(this.retrofitBuilder.build(), this);
    }

    /**
     * Gets the VirtualMachineScaleSetVMsOperations object to access its operations.
     * @return the virtualMachineScaleSetVMs value.
     */
    public VirtualMachineScaleSetVMsOperations getVirtualMachineScaleSetVMs() {
        return new VirtualMachineScaleSetVMsOperationsImpl(this.retrofitBuilder.build(), this);
    }

    /**
     * Initializes an instance of ComputeManagementClient client.
     */
    public ComputeManagementClientImpl() {
        this("https://management.azure.com");
    }

    /**
     * Initializes an instance of ComputeManagementClient client.
     *
     * @param baseUri the base URI of the host
     */
    public ComputeManagementClientImpl(String baseUri) {
        this(baseUri, null);
    }

    /**
     * Initializes an instance of ComputeManagementClient client.
     *
     * @param credentials the management credentials for Azure
     */
    public ComputeManagementClientImpl(ServiceClientCredentials credentials) {
        this("https://management.azure.com", credentials);
    }

    /**
     * Initializes an instance of ComputeManagementClient client.
     *
     * @param baseUri the base URI of the host
     * @param credentials the management credentials for Azure
     */
    public ComputeManagementClientImpl(String baseUri, ServiceClientCredentials credentials) {
        super();
        this.baseUri = baseUri;
        this.credentials = credentials;
        initialize();
    }

    /**
     * Initializes an instance of ComputeManagementClient client.
     *
     * @param baseUri the base URI of the host
     * @param credentials the management credentials for Azure
     * @param client the {@link OkHttpClient} client to use for REST calls
     * @param retrofitBuilder the builder for building up a {@link Retrofit}
     */
    public ComputeManagementClientImpl(String baseUri, ServiceClientCredentials credentials, OkHttpClient client, Retrofit.Builder retrofitBuilder) {
        super(client, retrofitBuilder);
        this.baseUri = baseUri;
        this.credentials = credentials;
        initialize();
    }

    private void initialize() {
        if (this.credentials != null) {
            this.credentials.applyCredentialsFilter(this.client);
        }
        this.apiVersion = "2015-06-15";
        this.acceptLanguage = "en-US";
        this.getClientInterceptors().add(new CustomHeaderInterceptor("x-ms-client-request-id", UUID.randomUUID().toString()));
        this.azureClient = new AzureClient(client, retrofitBuilder);
        this.azureClient.setCredentials(this.credentials);
        this.retrofitBuilder.baseUrl(baseUri);
    }
}
