// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.compute.models;

import com.microsoft.windowsazure.management.OperationResponse;
import java.util.ArrayList;
import java.util.Iterator;

/**
* The List Operating System Families operation response.
*/
public class OperatingSystemListFamiliesResponse extends OperationResponse implements Iterable<OperatingSystemListFamiliesResponse.OperatingSystemFamily>
{
    private ArrayList<OperatingSystemListFamiliesResponse.OperatingSystemFamily> operatingSystemFamilies;
    
    /**
    * The operating system families that are valid for your subscription.
    */
    public ArrayList<OperatingSystemListFamiliesResponse.OperatingSystemFamily> getOperatingSystemFamilies() { return this.operatingSystemFamilies; }
    
    /**
    * The operating system families that are valid for your subscription.
    */
    public void setOperatingSystemFamilies(ArrayList<OperatingSystemListFamiliesResponse.OperatingSystemFamily> operatingSystemFamilies) { this.operatingSystemFamilies = operatingSystemFamilies; }
    
    /**
    * Initializes a new instance of the OperatingSystemListFamiliesResponse
    * class.
    *
    */
    public OperatingSystemListFamiliesResponse()
    {
        this.operatingSystemFamilies = new ArrayList<OperatingSystemListFamiliesResponse.OperatingSystemFamily>();
    }
    
    /**
    * Gets the sequence of OperatingSystemFamilies.
    *
    */
    public Iterator<OperatingSystemListFamiliesResponse.OperatingSystemFamily> iterator()
    {
        return this.getOperatingSystemFamilies().iterator();
    }
    
    /**
    * An operating system that is valid for your subscription.
    */
    public static class OperatingSystem
    {
        private boolean isActive;
        
        /**
        * Indicates whether this operating system version is currently active
        * for running a service. If an operating system version is active, you
        * can manually configure your service to run on that version.  An
        * operating system version may be inactive for one of two reasons:  1.
        * It is not yet active as it is in the process of being rolled out to
        * Windows Azure data centers. If your service is configured to use
        * auto-upgrade, it will be upgraded to the new operating system
        * version during the rollout. If you are manually configuring your
        * operating system version, you can upgrade to the latest version once
        * it becomes active.  2. It is no longer supported for running a
        * service. In this case you will either need to manually configure
        * your service to run on a newer version, or configure your service to
        * use auto-upgrade to manage operating system upgrades.
        */
        public boolean getIsActive() { return this.isActive; }
        
        /**
        * Indicates whether this operating system version is currently active
        * for running a service. If an operating system version is active, you
        * can manually configure your service to run on that version.  An
        * operating system version may be inactive for one of two reasons:  1.
        * It is not yet active as it is in the process of being rolled out to
        * Windows Azure data centers. If your service is configured to use
        * auto-upgrade, it will be upgraded to the new operating system
        * version during the rollout. If you are manually configuring your
        * operating system version, you can upgrade to the latest version once
        * it becomes active.  2. It is no longer supported for running a
        * service. In this case you will either need to manually configure
        * your service to run on a newer version, or configure your service to
        * use auto-upgrade to manage operating system upgrades.
        */
        public void setIsActive(boolean isActive) { this.isActive = isActive; }
        
        private boolean isDefault;
        
        /**
        * Indicates whether this operating system version is the default
        * version for a service that has not otherwise specified a particular
        * version. The default operating system version is applied to services
        * that are configured for auto-upgrade. An operating system family has
        * exactly one default operating system version at any given time, for
        * which the IsDefault element is set to true; for all other versions,
        * IsDefault is set to false.
        */
        public boolean getIsDefault() { return this.isDefault; }
        
        /**
        * Indicates whether this operating system version is the default
        * version for a service that has not otherwise specified a particular
        * version. The default operating system version is applied to services
        * that are configured for auto-upgrade. An operating system family has
        * exactly one default operating system version at any given time, for
        * which the IsDefault element is set to true; for all other versions,
        * IsDefault is set to false.
        */
        public void setIsDefault(boolean isDefault) { this.isDefault = isDefault; }
        
        private String label;
        
        /**
        * The base-64 encoded label of the operating system version.
        */
        public String getLabel() { return this.label; }
        
        /**
        * The base-64 encoded label of the operating system version.
        */
        public void setLabel(String label) { this.label = label; }
        
        private String version;
        
        /**
        * The operating system version. This value corresponds to the
        * configuration value for specifying that your service is to run on a
        * particular version of the Windows Azure guest operating system. See
        * Configuring Settings for the Windows Azure Guest OS for additional
        * details.
        */
        public String getVersion() { return this.version; }
        
        /**
        * The operating system version. This value corresponds to the
        * configuration value for specifying that your service is to run on a
        * particular version of the Windows Azure guest operating system. See
        * Configuring Settings for the Windows Azure Guest OS for additional
        * details.
        */
        public void setVersion(String version) { this.version = version; }
        
        /**
        * Initializes a new instance of the OperatingSystem class.
        *
        */
        public OperatingSystem()
        {
        }
    }
    
    /**
    * An operating system family that is valid for your subscription.
    */
    public static class OperatingSystemFamily
    {
        private String label;
        
        /**
        * The base-64 encoded label of the operating system family.
        */
        public String getLabel() { return this.label; }
        
        /**
        * The base-64 encoded label of the operating system family.
        */
        public void setLabel(String label) { this.label = label; }
        
        private int name;
        
        /**
        * Indicates which operating system family this version belongs to. A
        * value of 1 corresponds to the Windows Azure guest operating system
        * that is substantially compatible with Windows Server 2008 SP2. A
        * value of 2 corresponds to the Windows Azure guest operating system
        * that is substantially compatible with Windows Server 2008 R2.
        */
        public int getName() { return this.name; }
        
        /**
        * Indicates which operating system family this version belongs to. A
        * value of 1 corresponds to the Windows Azure guest operating system
        * that is substantially compatible with Windows Server 2008 SP2. A
        * value of 2 corresponds to the Windows Azure guest operating system
        * that is substantially compatible with Windows Server 2008 R2.
        */
        public void setName(int name) { this.name = name; }
        
        private ArrayList<OperatingSystemListFamiliesResponse.OperatingSystem> operatingSystems;
        
        /**
        * The available operating systems in your subscription belonging to
        * this family.
        */
        public ArrayList<OperatingSystemListFamiliesResponse.OperatingSystem> getOperatingSystems() { return this.operatingSystems; }
        
        /**
        * The available operating systems in your subscription belonging to
        * this family.
        */
        public void setOperatingSystems(ArrayList<OperatingSystemListFamiliesResponse.OperatingSystem> operatingSystems) { this.operatingSystems = operatingSystems; }
        
        /**
        * Initializes a new instance of the OperatingSystemFamily class.
        *
        */
        public OperatingSystemFamily()
        {
            this.operatingSystems = new ArrayList<OperatingSystemListFamiliesResponse.OperatingSystem>();
        }
    }
}
