/**
 * 
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.compute.models;

import java.util.Calendar;

/**
* Contains information about when the virtual machine has been started and
* stopped.
*/
public class PersistentVMDowntime
{
    private Calendar endTime;
    
    /**
    * The time that the virtual machine was stopped.
    */
    public Calendar getEndTime() { return this.endTime; }
    
    /**
    * The time that the virtual machine was stopped.
    */
    public void setEndTime(Calendar endTime) { this.endTime = endTime; }
    
    private Calendar startTime;
    
    /**
    * The time that the virtual machine was started.
    */
    public Calendar getStartTime() { return this.startTime; }
    
    /**
    * The time that the virtual machine was started.
    */
    public void setStartTime(Calendar startTime) { this.startTime = startTime; }
    
    private String status;
    
    /**
    * The status of the virtual machine.
    */
    public String getStatus() { return this.status; }
    
    /**
    * The status of the virtual machine.
    */
    public void setStatus(String status) { this.status = status; }
    
    /**
    * Initializes a new instance of the PersistentVMDowntime class.
    *
    */
    public PersistentVMDowntime()
    {
    }
}
