// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.monitoring.autoscale.models;

/**
* A rule that provides the triggers and parameters for the scaling action.
*/
public class MetricTrigger
{
    private String name;
    
    /**
    * The name of the trigger.
    */
    public String getName() { return this.name; }
    
    /**
    * The name of the trigger.
    */
    public void setName(String name) { this.name = name; }
    
    private String namespace;
    
    /**
    * A namespace identifier for the service in which the deployment is running.
    */
    public String getNamespace() { return this.namespace; }
    
    /**
    * A namespace identifier for the service in which the deployment is running.
    */
    public void setNamespace(String namespace) { this.namespace = namespace; }
    
    private ComparisonOperationType operator;
    
    /**
    * The operator that is used to evaluate the metric.
    */
    public ComparisonOperationType getOperator() { return this.operator; }
    
    /**
    * The operator that is used to evaluate the metric.
    */
    public void setOperator(ComparisonOperationType operator) { this.operator = operator; }
    
    private String resource;
    
    /**
    * The resource path of the deployment.
    */
    public String getResource() { return this.resource; }
    
    /**
    * The resource path of the deployment.
    */
    public void setResource(String resource) { this.resource = resource; }
    
    private MetricStatisticType statistic;
    
    /**
    * How the metrics from multiple instances are combined.
    */
    public MetricStatisticType getStatistic() { return this.statistic; }
    
    /**
    * How the metrics from multiple instances are combined.
    */
    public void setStatistic(MetricStatisticType statistic) { this.statistic = statistic; }
    
    private double threshold;
    
    /**
    * The percentage of usage that triggers the scaling operation.
    */
    public double getThreshold() { return this.threshold; }
    
    /**
    * The percentage of usage that triggers the scaling operation.
    */
    public void setThreshold(double threshold) { this.threshold = threshold; }
    
    private TimeAggregationType timeAggregation;
    
    /**
    * How the data that is collected should be combined over time.
    */
    public TimeAggregationType getTimeAggregation() { return this.timeAggregation; }
    
    /**
    * How the data that is collected should be combined over time.
    */
    public void setTimeAggregation(TimeAggregationType timeAggregation) { this.timeAggregation = timeAggregation; }
    
    private String timeGrain;
    
    /**
    * The frequency of data collection.
    */
    public String getTimeGrain() { return this.timeGrain; }
    
    /**
    * The frequency of data collection.
    */
    public void setTimeGrain(String timeGrain) { this.timeGrain = timeGrain; }
    
    private String timeWindow;
    
    /**
    * The range of time in which instance data is collected.
    */
    public String getTimeWindow() { return this.timeWindow; }
    
    /**
    * The range of time in which instance data is collected.
    */
    public void setTimeWindow(String timeWindow) { this.timeWindow = timeWindow; }
    
    /**
    * Initializes a new instance of the MetricTrigger class.
    *
    */
    public MetricTrigger()
    {
    }
}
