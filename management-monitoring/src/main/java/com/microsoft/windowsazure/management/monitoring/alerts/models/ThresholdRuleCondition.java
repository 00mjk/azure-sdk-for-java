/**
 * 
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.monitoring.alerts.models;

import javax.xml.datatype.Duration;

/**
* A threshold rule condition.
*/
public class ThresholdRuleCondition extends RuleCondition
{
    private RuleDataSource dataSource;
    
    /**
    * Condition data source.
    */
    public RuleDataSource getDataSource() { return this.dataSource; }
    
    /**
    * Condition data source.
    */
    public void setDataSource(RuleDataSource dataSource) { this.dataSource = dataSource; }
    
    private ConditionOperator operator;
    
    /**
    * Condition operator.
    */
    public ConditionOperator getOperator() { return this.operator; }
    
    /**
    * Condition operator.
    */
    public void setOperator(ConditionOperator operator) { this.operator = operator; }
    
    private double threshold;
    
    /**
    * Condition threshold.
    */
    public double getThreshold() { return this.threshold; }
    
    /**
    * Condition threshold.
    */
    public void setThreshold(double threshold) { this.threshold = threshold; }
    
    private Duration windowSize;
    
    /**
    * The time period over which the alert rule is evaluated. Condition window
    * size depends on the metric.
    */
    public Duration getWindowSize() { return this.windowSize; }
    
    /**
    * The time period over which the alert rule is evaluated. Condition window
    * size depends on the metric.
    */
    public void setWindowSize(Duration windowSize) { this.windowSize = windowSize; }
    
    /**
    * Initializes a new instance of the ThresholdRuleCondition class.
    *
    */
    public ThresholdRuleCondition()
    {
    }
}
