/**
 * 
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.monitoring.alerts.models;

import javax.xml.datatype.Duration;

/**
 * A threshold rule condition.
 */
public class ThresholdRuleCondition extends RuleCondition {
    private RuleDataSource dataSource;

    /**
     * Condition data source.
     * 
     * @return The DataSource value.
     */
    public RuleDataSource getDataSource() {
        return this.dataSource;
    }

    /**
     * Condition data source.
     * 
     * @param dataSourceValue
     *            The DataSource value.
     */
    public void setDataSource(final RuleDataSource dataSourceValue) {
        this.dataSource = dataSourceValue;
    }

    private ConditionOperator operator;

    /**
     * Condition operator.
     * 
     * @return The Operator value.
     */
    public ConditionOperator getOperator() {
        return this.operator;
    }

    /**
     * Condition operator.
     * 
     * @param operatorValue
     *            The Operator value.
     */
    public void setOperator(final ConditionOperator operatorValue) {
        this.operator = operatorValue;
    }

    private double threshold;

    /**
     * Condition threshold.
     * 
     * @return The Threshold value.
     */
    public double getThreshold() {
        return this.threshold;
    }

    /**
     * Condition threshold.
     * 
     * @param thresholdValue
     *            The Threshold value.
     */
    public void setThreshold(final double thresholdValue) {
        this.threshold = thresholdValue;
    }

    private Duration windowSize;

    /**
     * The time period over which the alert rule is evaluated. Condition window
     * size depends on the metric.
     * 
     * @return The WindowSize value.
     */
    public Duration getWindowSize() {
        return this.windowSize;
    }

    /**
     * The time period over which the alert rule is evaluated. Condition window
     * size depends on the metric.
     * 
     * @param windowSizeValue
     *            The WindowSize value.
     */
    public void setWindowSize(final Duration windowSizeValue) {
        this.windowSize = windowSizeValue;
    }
}
