/**
 * 
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.monitoring.metrics.models;

import java.util.ArrayList;
import javax.xml.datatype.Duration;

/**
* Metric definition class specifies the metadata for a metric.
*/
public class MetricDefinition
{
    private String displayName;
    
    /**
    * Metric display name.
    */
    public String getDisplayName()
    {
        return this.displayName;
    }
    
    /**
    * Metric display name.
    */
    public void setDisplayName(String displayName)
    {
        this.displayName = displayName;
    }
    
    private boolean isAlertable;
    
    /**
    * Specifies if the metric is alertable. Alerts can be defined on a metric
    * only if this property is true.
    */
    public boolean isAlertable()
    {
        return this.isAlertable;
    }
    
    /**
    * Specifies if the metric is alertable. Alerts can be defined on a metric
    * only if this property is true.
    */
    public void setIsAlertable(boolean isAlertable)
    {
        this.isAlertable = isAlertable;
    }
    
    private ArrayList<MetricAvailability> metricAvailabilities;
    
    /**
    * Metric availability specifies the time grain (aggregation interval) and
    * the retention period for the metric in a timegrain.
    */
    public ArrayList<MetricAvailability> getMetricAvailabilities()
    {
        return this.metricAvailabilities;
    }
    
    /**
    * Metric availability specifies the time grain (aggregation interval) and
    * the retention period for the metric in a timegrain.
    */
    public void setMetricAvailabilities(ArrayList<MetricAvailability> metricAvailabilities)
    {
        this.metricAvailabilities = metricAvailabilities;
    }
    
    private Duration minimumAlertableTimeWindow;
    
    /**
    * Specifies the minimum alertable time window for the metric.
    */
    public Duration getMinimumAlertableTimeWindow()
    {
        return this.minimumAlertableTimeWindow;
    }
    
    /**
    * Specifies the minimum alertable time window for the metric.
    */
    public void setMinimumAlertableTimeWindow(Duration minimumAlertableTimeWindow)
    {
        this.minimumAlertableTimeWindow = minimumAlertableTimeWindow;
    }
    
    private String name;
    
    /**
    * Get the metric name.
    */
    public String getName()
    {
        return this.name;
    }
    
    /**
    * Get the metric name.
    */
    public void setName(String name)
    {
        this.name = name;
    }
    
    private String namespace;
    
    /**
    * Get the metric namespace.
    */
    public String getNamespace()
    {
        return this.namespace;
    }
    
    /**
    * Get the metric namespace.
    */
    public void setNamespace(String namespace)
    {
        this.namespace = namespace;
    }
    
    private String primaryAggregation;
    
    /**
    * Metric primary aggregation specifies the default type for the metrics.
    * This indicates if the metric is of type average, total, minimum or
    * maximum.
    */
    public String getPrimaryAggregation()
    {
        return this.primaryAggregation;
    }
    
    /**
    * Metric primary aggregation specifies the default type for the metrics.
    * This indicates if the metric is of type average, total, minimum or
    * maximum.
    */
    public void setPrimaryAggregation(String primaryAggregation)
    {
        this.primaryAggregation = primaryAggregation;
    }
    
    private String resourceIdSuffix;
    
    /**
    * Metric resource id suffix specfies the sub-resource path within the the
    * resource for the metric.
    */
    public String getResourceIdSuffix()
    {
        return this.resourceIdSuffix;
    }
    
    /**
    * Metric resource id suffix specfies the sub-resource path within the the
    * resource for the metric.
    */
    public void setResourceIdSuffix(String resourceIdSuffix)
    {
        this.resourceIdSuffix = resourceIdSuffix;
    }
    
    private String unit;
    
    /**
    * The unit for the metric.
    */
    public String getUnit()
    {
        return this.unit;
    }
    
    /**
    * The unit for the metric.
    */
    public void setUnit(String unit)
    {
        this.unit = unit;
    }
    
    /**
    * Initializes a new instance of the MetricDefinition class.
    *
    */
    public MetricDefinition()
    {
        this.metricAvailabilities = new ArrayList<MetricAvailability>();
    }
}
