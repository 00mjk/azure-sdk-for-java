/**
 * 
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.monitoring.metrics;

import com.microsoft.windowsazure.exception.ServiceException;
import com.microsoft.windowsazure.management.monitoring.metrics.models.MetricValueListResponse;
import java.io.IOException;
import java.net.URISyntaxException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.concurrent.Future;
import javax.xml.datatype.Duration;

public interface MetricValueOperations
{
    /**
    * The List Metric Value operation lists the metric value sets for the
    * resource metrics.
    *
    * @param resourceId The id of the resource.
    * @param metricNames The names of the metrics.
    * @param metricNamespace The namespace of the metrics.
    * @param timeGrain The time grain of the metrics.
    * @param startTime The start time (in UTC) of the metrics.
    * @param endTime The end time (in UTC) of the metrics.
    * @throws IOException Signals that an I/O exception of some sort has
    * occurred. This class is the general class of exceptions produced by
    * failed or interrupted I/O operations.
    * @throws ServiceException Thrown if an unexpected response is found.
    * @throws URISyntaxException Thrown if there was an error parsing a URI in
    * the response.
    * @throws ParseException Thrown if there was an error parsing a string in
    * the response.
    * @return The List Metric values operation response.
    */
    MetricValueListResponse list(String resourceId, ArrayList<String> metricNames, String metricNamespace, Duration timeGrain, Calendar startTime, Calendar endTime) throws IOException, ServiceException, URISyntaxException, ParseException;
    
    /**
    * The List Metric Value operation lists the metric value sets for the
    * resource metrics.
    *
    * @param resourceId The id of the resource.
    * @param metricNames The names of the metrics.
    * @param metricNamespace The namespace of the metrics.
    * @param timeGrain The time grain of the metrics.
    * @param startTime The start time (in UTC) of the metrics.
    * @param endTime The end time (in UTC) of the metrics.
    * @return The List Metric values operation response.
    */
    Future<MetricValueListResponse> listAsync(String resourceId, ArrayList<String> metricNames, String metricNamespace, Duration timeGrain, Calendar startTime, Calendar endTime);
}
