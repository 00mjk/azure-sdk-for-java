// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.monitoring.metrics.models;

import java.util.Calendar;

/**
* A metric value.
*/
public class MetricValue
{
    private String annotation;
    
    /**
    * Metric annotation.
    */
    public String getAnnotation() { return this.annotation; }
    
    /**
    * Metric annotation.
    */
    public void setAnnotation(String annotation) { this.annotation = annotation; }
    
    private Double average;
    
    /**
    * Metric average.
    */
    public Double getAverage() { return this.average; }
    
    /**
    * Metric average.
    */
    public void setAverage(Double average) { this.average = average; }
    
    private Integer count;
    
    /**
    * Metric count.
    */
    public Integer getCount() { return this.count; }
    
    /**
    * Metric count.
    */
    public void setCount(Integer count) { this.count = count; }
    
    private Double maximum;
    
    /**
    * Metric maximum.
    */
    public Double getMaximum() { return this.maximum; }
    
    /**
    * Metric maximum.
    */
    public void setMaximum(Double maximum) { this.maximum = maximum; }
    
    private Double minimum;
    
    /**
    * Metric minimum.
    */
    public Double getMinimum() { return this.minimum; }
    
    /**
    * Metric minimum.
    */
    public void setMinimum(Double minimum) { this.minimum = minimum; }
    
    private Calendar timestamp;
    
    /**
    * Metric timestamp.
    */
    public Calendar getTimestamp() { return this.timestamp; }
    
    /**
    * Metric timestamp.
    */
    public void setTimestamp(Calendar timestamp) { this.timestamp = timestamp; }
    
    private Double total;
    
    /**
    * Metric total.
    */
    public Double getTotal() { return this.total; }
    
    /**
    * Metric total.
    */
    public void setTotal(Double total) { this.total = total; }
    
    /**
    * Initializes a new instance of the MetricValue class.
    *
    */
    public MetricValue()
    {
    }
}
