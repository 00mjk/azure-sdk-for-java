/**
 * 
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.monitoring.metrics.models;

import java.util.Calendar;

/**
* Represents a metric value.
*/
public class MetricValue
{
    private String annotation;
    
    /**
    * Specifies annotation for the metric.
    */
    public String getAnnotation()
    {
        return this.annotation;
    }
    
    /**
    * Specifies annotation for the metric.
    */
    public void setAnnotation(String annotation)
    {
        this.annotation = annotation;
    }
    
    private Double average;
    
    /**
    * Specifies the average value in the time interval.
    */
    public Double getAverage()
    {
        return this.average;
    }
    
    /**
    * Specifies the average value in the time interval.
    */
    public void setAverage(Double average)
    {
        this.average = average;
    }
    
    private Integer count;
    
    /**
    * Specifies the sample count in the time interval. Can be used to determine
    * the number of values that contributed to the average value.
    */
    public Integer getCount()
    {
        return this.count;
    }
    
    /**
    * Specifies the sample count in the time interval. Can be used to determine
    * the number of values that contributed to the average value.
    */
    public void setCount(Integer count)
    {
        this.count = count;
    }
    
    private Double maximum;
    
    /**
    * Specifies the maximum value in the time interval.
    */
    public Double getMaximum()
    {
        return this.maximum;
    }
    
    /**
    * Specifies the maximum value in the time interval.
    */
    public void setMaximum(Double maximum)
    {
        this.maximum = maximum;
    }
    
    private Double minimum;
    
    /**
    * Specifies the minimum value in the time interval.
    */
    public Double getMinimum()
    {
        return this.minimum;
    }
    
    /**
    * Specifies the minimum value in the time interval.
    */
    public void setMinimum(Double minimum)
    {
        this.minimum = minimum;
    }
    
    private Calendar timestamp;
    
    /**
    * The timestamp for the metric value.
    */
    public Calendar getTimestamp()
    {
        return this.timestamp;
    }
    
    /**
    * The timestamp for the metric value.
    */
    public void setTimestamp(Calendar timestamp)
    {
        this.timestamp = timestamp;
    }
    
    private Double total;
    
    /**
    * Specifies the total value in the time interval.
    */
    public Double getTotal()
    {
        return this.total;
    }
    
    /**
    * Specifies the total value in the time interval.
    */
    public void setTotal(Double total)
    {
        this.total = total;
    }
}
