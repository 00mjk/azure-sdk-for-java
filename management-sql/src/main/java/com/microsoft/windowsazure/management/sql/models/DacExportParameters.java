// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.sql.models;

import java.net.URI;

/**
* Parameters supplied to the DAC Export operation.
*/
public class DacExportParameters
{
    private DacExportParameters.BlobCredentialsParameter blobCredentials;
    
    /**
    * Credentials for getting the DAC.
    */
    public DacExportParameters.BlobCredentialsParameter getBlobCredentials() { return this.blobCredentials; }
    
    /**
    * Credentials for getting the DAC.
    */
    public void setBlobCredentials(DacExportParameters.BlobCredentialsParameter blobCredentials) { this.blobCredentials = blobCredentials; }
    
    private DacExportParameters.ConnectionInfoParameter connectionInfo;
    
    /**
    * Connection information for the SQL Server Database.
    */
    public DacExportParameters.ConnectionInfoParameter getConnectionInfo() { return this.connectionInfo; }
    
    /**
    * Connection information for the SQL Server Database.
    */
    public void setConnectionInfo(DacExportParameters.ConnectionInfoParameter connectionInfo) { this.connectionInfo = connectionInfo; }
    
    /**
    * Initializes a new instance of the DacExportParameters class.
    *
    */
    public DacExportParameters()
    {
    }
    
    /**
    * Credentials for getting the DAC
    */
    public static class BlobCredentialsParameter
    {
        private String storageAccessKey;
        
        /**
        * The key for the Windows Azure Storage account.
        */
        public String getStorageAccessKey() { return this.storageAccessKey; }
        
        /**
        * The key for the Windows Azure Storage account.
        */
        public void setStorageAccessKey(String storageAccessKey) { this.storageAccessKey = storageAccessKey; }
        
        private URI uri;
        
        /**
        * The URI of the DAC file in stored in Windows Azure Blob Storage.
        */
        public URI getUri() { return this.uri; }
        
        /**
        * The URI of the DAC file in stored in Windows Azure Blob Storage.
        */
        public void setUri(URI uri) { this.uri = uri; }
        
        /**
        * Initializes a new instance of the BlobCredentialsParameter class.
        *
        */
        public BlobCredentialsParameter()
        {
        }
    }
    
    /**
    * Connection information for the SQL Server Database.
    */
    public static class ConnectionInfoParameter
    {
        private String databaseName;
        
        /**
        * The name of the database.
        */
        public String getDatabaseName() { return this.databaseName; }
        
        /**
        * The name of the database.
        */
        public void setDatabaseName(String databaseName) { this.databaseName = databaseName; }
        
        private String password;
        
        /**
        * The password for the database user.
        */
        public String getPassword() { return this.password; }
        
        /**
        * The password for the database user.
        */
        public void setPassword(String password) { this.password = password; }
        
        private String serverName;
        
        /**
        * The SQL server name.
        */
        public String getServerName() { return this.serverName; }
        
        /**
        * The SQL server name.
        */
        public void setServerName(String serverName) { this.serverName = serverName; }
        
        private String userName;
        
        /**
        * The username of the database user.
        */
        public String getUserName() { return this.userName; }
        
        /**
        * The username of the database user.
        */
        public void setUserName(String userName) { this.userName = userName; }
        
        /**
        * Initializes a new instance of the ConnectionInfoParameter class.
        *
        */
        public ConnectionInfoParameter()
        {
        }
    }
}
