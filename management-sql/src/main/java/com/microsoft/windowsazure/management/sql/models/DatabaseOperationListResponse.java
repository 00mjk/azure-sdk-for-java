// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.sql.models;

import com.microsoft.windowsazure.management.OperationResponse;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Iterator;

/**
* Response containing the list of database operations for a given server or
* database.
*/
public class DatabaseOperationListResponse extends OperationResponse implements Iterable<DatabaseOperationListResponse.DatabaseOperation>
{
    private ArrayList<DatabaseOperationListResponse.DatabaseOperation> databaseOperations;
    
    /**
    * The list of database operations' response.
    */
    public ArrayList<DatabaseOperationListResponse.DatabaseOperation> getDatabaseOperations() { return this.databaseOperations; }
    
    /**
    * The list of database operations' response.
    */
    public void setDatabaseOperations(ArrayList<DatabaseOperationListResponse.DatabaseOperation> databaseOperations) { this.databaseOperations = databaseOperations; }
    
    /**
    * Initializes a new instance of the DatabaseOperationListResponse class.
    *
    */
    public DatabaseOperationListResponse()
    {
        this.databaseOperations = new ArrayList<DatabaseOperationListResponse.DatabaseOperation>();
    }
    
    /**
    * Gets the sequence of DatabaseOperations.
    *
    */
    public Iterator<DatabaseOperationListResponse.DatabaseOperation> iterator()
    {
        return this.getDatabaseOperations().iterator();
    }
    
    public static class DatabaseOperation
    {
        private String databaseName;
        
        /**
        * Name of the SQL Database on which the operation is performed.
        */
        public String getDatabaseName() { return this.databaseName; }
        
        /**
        * Name of the SQL Database on which the operation is performed.
        */
        public void setDatabaseName(String databaseName) { this.databaseName = databaseName; }
        
        private String error;
        
        /**
        * Description of the error that occurred during a failed operation.
        */
        public String getError() { return this.error; }
        
        /**
        * Description of the error that occurred during a failed operation.
        */
        public void setError(String error) { this.error = error; }
        
        private int errorCode;
        
        /**
        * Code indicating the error that occurred during a failed operation.
        */
        public int getErrorCode() { return this.errorCode; }
        
        /**
        * Code indicating the error that occurred during a failed operation.
        */
        public void setErrorCode(int errorCode) { this.errorCode = errorCode; }
        
        private int errorSeverity;
        
        /**
        * Severity level of the error that occurred during a failed operation.
        */
        public int getErrorSeverity() { return this.errorSeverity; }
        
        /**
        * Severity level of the error that occurred during a failed operation.
        */
        public void setErrorSeverity(int errorSeverity) { this.errorSeverity = errorSeverity; }
        
        private int errorState;
        
        /**
        * Error State.
        */
        public int getErrorState() { return this.errorState; }
        
        /**
        * Error State.
        */
        public void setErrorState(int errorState) { this.errorState = errorState; }
        
        private String id;
        
        /**
        * Unique identifier of the operation..
        */
        public String getId() { return this.id; }
        
        /**
        * Unique identifier of the operation..
        */
        public void setId(String id) { this.id = id; }
        
        private Calendar lastModifyTime;
        
        /**
        * Timestamp when the record was last modified for a long running
        * operation.
        */
        public Calendar getLastModifyTime() { return this.lastModifyTime; }
        
        /**
        * Timestamp when the record was last modified for a long running
        * operation.
        */
        public void setLastModifyTime(Calendar lastModifyTime) { this.lastModifyTime = lastModifyTime; }
        
        private String name;
        
        /**
        * The name of the operation.
        */
        public String getName() { return this.name; }
        
        /**
        * The name of the operation.
        */
        public void setName(String name) { this.name = name; }
        
        private String parentLink;
        
        /**
        * The ParentLink of the operation.
        */
        public String getParentLink() { return this.parentLink; }
        
        /**
        * The ParentLink of the operation.
        */
        public void setParentLink(String parentLink) { this.parentLink = parentLink; }
        
        private int percentComplete;
        
        /**
        * Percentage of operation that has completed.
        */
        public int getPercentComplete() { return this.percentComplete; }
        
        /**
        * Percentage of operation that has completed.
        */
        public void setPercentComplete(int percentComplete) { this.percentComplete = percentComplete; }
        
        private String selfLink;
        
        /**
        * The SelfLink of the operation.
        */
        public String getSelfLink() { return this.selfLink; }
        
        /**
        * The SelfLink of the operation.
        */
        public void setSelfLink(String selfLink) { this.selfLink = selfLink; }
        
        private String sessionActivityId;
        
        /**
        * Session scoped ID of the operation.
        */
        public String getSessionActivityId() { return this.sessionActivityId; }
        
        /**
        * Session scoped ID of the operation.
        */
        public void setSessionActivityId(String sessionActivityId) { this.sessionActivityId = sessionActivityId; }
        
        private Calendar startTime;
        
        /**
        * Timestamp when the operation started.
        */
        public Calendar getStartTime() { return this.startTime; }
        
        /**
        * Timestamp when the operation started.
        */
        public void setStartTime(Calendar startTime) { this.startTime = startTime; }
        
        private String state;
        
        /**
        * The state of the operation.
        */
        public String getState() { return this.state; }
        
        /**
        * The state of the operation.
        */
        public void setState(String state) { this.state = state; }
        
        private int stateId;
        
        /**
        * Current State of the long running operation in numeric format.
        */
        public int getStateId() { return this.stateId; }
        
        /**
        * Current State of the long running operation in numeric format.
        */
        public void setStateId(int stateId) { this.stateId = stateId; }
        
        private String type;
        
        /**
        * The type of resource.
        */
        public String getType() { return this.type; }
        
        /**
        * The type of resource.
        */
        public void setType(String type) { this.type = type; }
        
        /**
        * Initializes a new instance of the DatabaseOperation class.
        *
        */
        public DatabaseOperation()
        {
        }
    }
}
