// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.sql;

import com.microsoft.windowsazure.management.OperationResponse;
import com.microsoft.windowsazure.management.sql.models.FirewallRuleCreateParameters;
import com.microsoft.windowsazure.management.sql.models.FirewallRuleCreateResponse;
import com.microsoft.windowsazure.management.sql.models.FirewallRuleListResponse;
import com.microsoft.windowsazure.management.sql.models.FirewallRuleUpdateParameters;
import com.microsoft.windowsazure.management.sql.models.FirewallRuleUpdateResponse;
import com.microsoft.windowsazure.services.core.ServiceException;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.text.ParseException;
import java.util.concurrent.Future;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import org.xml.sax.SAXException;

/**
* The Windows Azure SQL Database Management API includes operations for
* managing the server-level firewall rules for SQL Database servers.You cannot
* manage the database-level firewall rules using the Windows Azure SQL
* Database Management API; they can only be managed by running the
* Transact-SQL statements against the master or individual user databases.
* (see http://msdn.microsoft.com/en-us/library/windowsazure/gg715276.aspx for
* more information)
*/
public interface FirewallRuleOperations
{
    /**
    * The Set Server Firewall Rule operation updates an existing server-level
    * firewall rule or adds a new server-level firewall rule for a SQL
    * Database server that belongs to a subscription.  (see
    * http://msdn.microsoft.com/en-us/library/windowsazure/gg715280.aspx for
    * more information)
    *
    * @param serverName The name of the SQL database server to which this rule
    * will be applied.
    * @param parameters Parameters for the Create Firewall Rule operation
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    FirewallRuleCreateResponse create(String serverName, FirewallRuleCreateParameters parameters) throws ParserConfigurationException, SAXException, TransformerConfigurationException, TransformerException, UnsupportedEncodingException, IOException, ServiceException, ParseException;
    
    /**
    * The Set Server Firewall Rule operation updates an existing server-level
    * firewall rule or adds a new server-level firewall rule for a SQL
    * Database server that belongs to a subscription.  (see
    * http://msdn.microsoft.com/en-us/library/windowsazure/gg715280.aspx for
    * more information)
    *
    * @param serverName The name of the SQL database server to which this rule
    * will be applied.
    * @param parameters Parameters for the Create Firewall Rule operation
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    Future<FirewallRuleCreateResponse> createAsync(String serverName, FirewallRuleCreateParameters parameters);
    
    /**
    * The Delete Server Firewall Rule operation deletes a server-level firewall
    * rule from a SQL Database server that belongs to a subscription.  (see
    * http://msdn.microsoft.com/en-us/library/windowsazure/gg715277.aspx for
    * more information)
    *
    * @param serverName The name of the server that will be have new firewall
    * rule applied to it
    * @param ruleName The name of the new firewall rule
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    OperationResponse delete(String serverName, String ruleName) throws IOException, ServiceException;
    
    /**
    * The Delete Server Firewall Rule operation deletes a server-level firewall
    * rule from a SQL Database server that belongs to a subscription.  (see
    * http://msdn.microsoft.com/en-us/library/windowsazure/gg715277.aspx for
    * more information)
    *
    * @param serverName The name of the server that will be have new firewall
    * rule applied to it
    * @param ruleName The name of the new firewall rule
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    Future<OperationResponse> deleteAsync(String serverName, String ruleName);
    
    /**
    * The Get Server Firewall Rules operation retrieves a list of all the
    * server-level firewall rules for a SQL Database server that belongs to a
    * subscription.  (see
    * http://msdn.microsoft.com/en-us/library/windowsazure/gg715278.aspx for
    * more information)
    *
    * @param serverName The name of the server for which the call is being made
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    FirewallRuleListResponse list(String serverName) throws IOException, ServiceException, ParserConfigurationException, SAXException, ParseException;
    
    /**
    * The Get Server Firewall Rules operation retrieves a list of all the
    * server-level firewall rules for a SQL Database server that belongs to a
    * subscription.  (see
    * http://msdn.microsoft.com/en-us/library/windowsazure/gg715278.aspx for
    * more information)
    *
    * @param serverName The name of the server for which the call is being made
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    Future<FirewallRuleListResponse> listAsync(String serverName);
    
    /**
    * The Set Server Firewall Rule operation updates an existing server-level
    * firewall rule or adds a new server-level firewall rule for a SQL
    * Database server that belongs to a subscription.  (see
    * http://msdn.microsoft.com/en-us/library/windowsazure/gg715280.aspx for
    * more information)
    *
    * @param serverName The name of the SQL database server to which this rule
    * will be applied.
    * @param ruleName The name of the firewall rule to be updated.
    * @param parameters Parameters for the Update Firewall Rule operation
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    FirewallRuleUpdateResponse update(String serverName, String ruleName, FirewallRuleUpdateParameters parameters) throws ParserConfigurationException, SAXException, TransformerConfigurationException, TransformerException, UnsupportedEncodingException, IOException, ServiceException, ParseException;
    
    /**
    * The Set Server Firewall Rule operation updates an existing server-level
    * firewall rule or adds a new server-level firewall rule for a SQL
    * Database server that belongs to a subscription.  (see
    * http://msdn.microsoft.com/en-us/library/windowsazure/gg715280.aspx for
    * more information)
    *
    * @param serverName The name of the SQL database server to which this rule
    * will be applied.
    * @param ruleName The name of the firewall rule to be updated.
    * @param parameters Parameters for the Update Firewall Rule operation
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    Future<FirewallRuleUpdateResponse> updateAsync(String serverName, String ruleName, FirewallRuleUpdateParameters parameters);
}
