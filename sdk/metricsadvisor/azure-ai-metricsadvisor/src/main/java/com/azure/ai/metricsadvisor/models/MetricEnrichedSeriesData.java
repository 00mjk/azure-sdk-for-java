// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.metricsadvisor.models;

import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;

/**
 * Enriched time series data which includes additional service computed
 * values for the time series data points.
 */
public final class MetricEnrichedSeriesData {
    private DimensionKey seriesKey;
    private List<OffsetDateTime> timestamps;
    private List<Double> values;
    private List<Boolean> isAnomaly;
    private List<Integer> periods;
    private List<Double> expectedValues;
    private List<Double> lowerBounds;
    private List<Double> upperBounds;

    /**
     * Gets the key of the time series.
     *
     * @return The time series key.
     */
    public DimensionKey getSeriesKey() {
        return seriesKey;
    }

    /**
     * Gets the timestamps of the data points in the time series.
     *
     * @return The timestamps.
     */
    public List<OffsetDateTime> getTimestamps() {
        return Collections.unmodifiableList(this.timestamps);
    }

    /**
     * Gets the values of the data points in the time series.
     *
     * @return The values.
     */
    public List<Double> getValues() {
        return Collections.unmodifiableList(this.values);
    }

    /**
     * Gets the anomaly status of the data points in the time series.
     *
     * @return The anomaly statuses.
     */
    public List<Boolean> isAnomaly() {
        return Collections.unmodifiableList(this.isAnomaly);
    }

    /**
     * Gets the periods calculated for the data points in the time series.
     *
     * @return The periods.
     */
    public List<Integer> getPeriods() {
        return Collections.unmodifiableList(this.periods);
    }

    /**
     * Gets the expected values of the data points calculated by the smart detector.
     *
     * @return The expected values.
     */
    public List<Double> getExpectedValues() {
        return Collections.unmodifiableList(this.expectedValues);
    }

    /**
     * Gets the lower boundary values of the data points calculated by smart detector.
     *
     * @return The lower bound values.
     */
    public List<Double> getLowerBounds() {
        return Collections.unmodifiableList(this.lowerBounds);
    }

    /**
     * Gets the upper boundary values of the data points calculated by smart detector.
     *
     * @return The upper bound values.
     */
    public List<Double> getUpperBounds() {
        return Collections.unmodifiableList(this.upperBounds);
    }
}
