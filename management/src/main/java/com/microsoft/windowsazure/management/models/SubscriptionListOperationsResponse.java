/**
 * 
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.models;

import com.microsoft.windowsazure.core.OperationResponse;
import java.net.InetAddress;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;

/**
* The List Subscription Operations operation response.
*/
public class SubscriptionListOperationsResponse extends OperationResponse
{
    private String continuationToken;
    
    /**
    * The string that can be used to return the rest of the list. Subsequent
    * requests must include this parameter to continue listing operations from
    * where the last response left off. This element exists only if the
    * complete list of subscription operations was not returned.
    */
    public String getContinuationToken() { return this.continuationToken; }
    
    /**
    * The string that can be used to return the rest of the list. Subsequent
    * requests must include this parameter to continue listing operations from
    * where the last response left off. This element exists only if the
    * complete list of subscription operations was not returned.
    */
    public void setContinuationToken(String continuationToken) { this.continuationToken = continuationToken; }
    
    private ArrayList<SubscriptionListOperationsResponse.SubscriptionOperation> subscriptionOperations;
    
    /**
    * The list of operations that have been performed on the subscription
    * during the specified timeframe.
    */
    public ArrayList<SubscriptionListOperationsResponse.SubscriptionOperation> getSubscriptionOperations() { return this.subscriptionOperations; }
    
    /**
    * The list of operations that have been performed on the subscription
    * during the specified timeframe.
    */
    public void setSubscriptionOperations(ArrayList<SubscriptionListOperationsResponse.SubscriptionOperation> subscriptionOperations) { this.subscriptionOperations = subscriptionOperations; }
    
    /**
    * Initializes a new instance of the SubscriptionListOperationsResponse
    * class.
    *
    */
    public SubscriptionListOperationsResponse()
    {
        this.subscriptionOperations = new ArrayList<SubscriptionListOperationsResponse.SubscriptionOperation>();
    }
    
    /**
    * A collection of attributes that identifies the source of the operation.
    */
    public static class OperationCallerDetails
    {
        private InetAddress clientIPAddress;
        
        /**
        * The IP address of the client computer that initiated the operation.
        * This element is returned only if UsedServiceManagementApi is true.
        */
        public InetAddress getClientIPAddress() { return this.clientIPAddress; }
        
        /**
        * The IP address of the client computer that initiated the operation.
        * This element is returned only if UsedServiceManagementApi is true.
        */
        public void setClientIPAddress(InetAddress clientIPAddress) { this.clientIPAddress = clientIPAddress; }
        
        private String subscriptionCertificateThumbprint;
        
        /**
        * The thumbprint of the subscription certificate used to initiate the
        * operation.
        */
        public String getSubscriptionCertificateThumbprint() { return this.subscriptionCertificateThumbprint; }
        
        /**
        * The thumbprint of the subscription certificate used to initiate the
        * operation.
        */
        public void setSubscriptionCertificateThumbprint(String subscriptionCertificateThumbprint) { this.subscriptionCertificateThumbprint = subscriptionCertificateThumbprint; }
        
        private boolean usedServiceManagementApi;
        
        /**
        * Indicates whether the operation was initiated by using the Service
        * Management API. False if it was initiated by another source, such as
        * the Management Portal.
        */
        public boolean getUsedServiceManagementApi() { return this.usedServiceManagementApi; }
        
        /**
        * Indicates whether the operation was initiated by using the Service
        * Management API. False if it was initiated by another source, such as
        * the Management Portal.
        */
        public void setUsedServiceManagementApi(boolean usedServiceManagementApi) { this.usedServiceManagementApi = usedServiceManagementApi; }
        
        private String userEmailAddress;
        
        /**
        * The email associated with the Windows Live ID of the user who
        * initiated the operation from the Management Portal. This element is
        * returned only if UsedServiceManagementApi is false.
        */
        public String getUserEmailAddress() { return this.userEmailAddress; }
        
        /**
        * The email associated with the Windows Live ID of the user who
        * initiated the operation from the Management Portal. This element is
        * returned only if UsedServiceManagementApi is false.
        */
        public void setUserEmailAddress(String userEmailAddress) { this.userEmailAddress = userEmailAddress; }
        
        /**
        * Initializes a new instance of the OperationCallerDetails class.
        *
        */
        public OperationCallerDetails()
        {
        }
    }
    
    /**
    * An operation that has been performed on the subscription during the
    * specified timeframe.
    */
    public static class SubscriptionOperation
    {
        private SubscriptionListOperationsResponse.OperationCallerDetails operationCaller;
        
        /**
        * A collection of attributes that identifies the source of the
        * operation.
        */
        public SubscriptionListOperationsResponse.OperationCallerDetails getOperationCaller() { return this.operationCaller; }
        
        /**
        * A collection of attributes that identifies the source of the
        * operation.
        */
        public void setOperationCaller(SubscriptionListOperationsResponse.OperationCallerDetails operationCaller) { this.operationCaller = operationCaller; }
        
        private Calendar operationCompletedTime;
        
        /**
        * The time that the operation finished executing.
        */
        public Calendar getOperationCompletedTime() { return this.operationCompletedTime; }
        
        /**
        * The time that the operation finished executing.
        */
        public void setOperationCompletedTime(Calendar operationCompletedTime) { this.operationCompletedTime = operationCompletedTime; }
        
        private String operationId;
        
        /**
        * The globally unique identifier (GUID) of the operation.
        */
        public String getOperationId() { return this.operationId; }
        
        /**
        * The globally unique identifier (GUID) of the operation.
        */
        public void setOperationId(String operationId) { this.operationId = operationId; }
        
        private String operationName;
        
        /**
        * The name of the performed operation.
        */
        public String getOperationName() { return this.operationName; }
        
        /**
        * The name of the performed operation.
        */
        public void setOperationName(String operationName) { this.operationName = operationName; }
        
        private String operationObjectId;
        
        /**
        * The target object for the operation. This value is equal to the URL
        * for performing an HTTP GET on the object, and corresponds to the
        * same values for the ObjectIdFilter in the request.
        */
        public String getOperationObjectId() { return this.operationObjectId; }
        
        /**
        * The target object for the operation. This value is equal to the URL
        * for performing an HTTP GET on the object, and corresponds to the
        * same values for the ObjectIdFilter in the request.
        */
        public void setOperationObjectId(String operationObjectId) { this.operationObjectId = operationObjectId; }
        
        private HashMap<String, String> operationParameters;
        
        /**
        * The collection of parameters for the performed operation.
        */
        public HashMap<String, String> getOperationParameters() { return this.operationParameters; }
        
        /**
        * The collection of parameters for the performed operation.
        */
        public void setOperationParameters(HashMap<String, String> operationParameters) { this.operationParameters = operationParameters; }
        
        private Calendar operationStartedTime;
        
        /**
        * The time that the operation started to execute.
        */
        public Calendar getOperationStartedTime() { return this.operationStartedTime; }
        
        /**
        * The time that the operation started to execute.
        */
        public void setOperationStartedTime(Calendar operationStartedTime) { this.operationStartedTime = operationStartedTime; }
        
        private String operationStatus;
        
        /**
        * An object that contains information on the current status of the
        * operation. The object returned has the following XML format:
        * <OperationStatus> <ID>339c6c13-1f81-412f-9bc6-00e9c5876695</ID>
        * <Status>Succeeded</Status> <HttpStatusCode>200</HttpStatusCode>
        * </OperationStatus>  Possible values of the Status element,
        * whichholds the operation status, are: Succeeded, Failed, InProgress.
        */
        public String getOperationStatus() { return this.operationStatus; }
        
        /**
        * An object that contains information on the current status of the
        * operation. The object returned has the following XML format:
        * <OperationStatus> <ID>339c6c13-1f81-412f-9bc6-00e9c5876695</ID>
        * <Status>Succeeded</Status> <HttpStatusCode>200</HttpStatusCode>
        * </OperationStatus>  Possible values of the Status element,
        * whichholds the operation status, are: Succeeded, Failed, InProgress.
        */
        public void setOperationStatus(String operationStatus) { this.operationStatus = operationStatus; }
        
        /**
        * Initializes a new instance of the SubscriptionOperation class.
        *
        */
        public SubscriptionOperation()
        {
            this.operationParameters = new HashMap<String, String>();
        }
    }
}
