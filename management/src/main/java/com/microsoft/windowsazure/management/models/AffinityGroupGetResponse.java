/**
 * 
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.models;

import com.microsoft.windowsazure.core.OperationResponse;
import java.net.URI;
import java.util.ArrayList;

/**
* The Get Affinity Group operation response.
*/
public class AffinityGroupGetResponse extends OperationResponse
{
    private ArrayList<String> capabilities;
    
    /**
    * Indicates if the virtual machine related operations can be performed in
    * this affinity group. If so, the string PersistentVMRole will be returned
    * by this element. Otherwise, this element will not be present.
    */
    public ArrayList<String> getCapabilities() { return this.capabilities; }
    
    /**
    * Indicates if the virtual machine related operations can be performed in
    * this affinity group. If so, the string PersistentVMRole will be returned
    * by this element. Otherwise, this element will not be present.
    */
    public void setCapabilities(ArrayList<String> capabilities) { this.capabilities = capabilities; }
    
    private String description;
    
    /**
    * The user supplied description of this affinity group.
    */
    public String getDescription() { return this.description; }
    
    /**
    * The user supplied description of this affinity group.
    */
    public void setDescription(String description) { this.description = description; }
    
    private ArrayList<AffinityGroupGetResponse.HostedServiceReference> hostedServices;
    
    /**
    * The hosted services associated with this affinity group.
    */
    public ArrayList<AffinityGroupGetResponse.HostedServiceReference> getHostedServices() { return this.hostedServices; }
    
    /**
    * The hosted services associated with this affinity group.
    */
    public void setHostedServices(ArrayList<AffinityGroupGetResponse.HostedServiceReference> hostedServices) { this.hostedServices = hostedServices; }
    
    private String label;
    
    /**
    * The user supplied label of the affinity group returned as a base-64
    * encoded string.
    */
    public String getLabel() { return this.label; }
    
    /**
    * The user supplied label of the affinity group returned as a base-64
    * encoded string.
    */
    public void setLabel(String label) { this.label = label; }
    
    private String location;
    
    /**
    * The location of the data center that the affinity group is associated
    * with.
    */
    public String getLocation() { return this.location; }
    
    /**
    * The location of the data center that the affinity group is associated
    * with.
    */
    public void setLocation(String location) { this.location = location; }
    
    private String name;
    
    /**
    * The user supplied name of the affinity group.
    */
    public String getName() { return this.name; }
    
    /**
    * The user supplied name of the affinity group.
    */
    public void setName(String name) { this.name = name; }
    
    private ArrayList<AffinityGroupGetResponse.StorageServiceReference> storageServices;
    
    /**
    * The storage services associated with this affinity group.
    */
    public ArrayList<AffinityGroupGetResponse.StorageServiceReference> getStorageServices() { return this.storageServices; }
    
    /**
    * The storage services associated with this affinity group.
    */
    public void setStorageServices(ArrayList<AffinityGroupGetResponse.StorageServiceReference> storageServices) { this.storageServices = storageServices; }
    
    /**
    * Initializes a new instance of the AffinityGroupGetResponse class.
    *
    */
    public AffinityGroupGetResponse()
    {
        this.capabilities = new ArrayList<String>();
        this.hostedServices = new ArrayList<AffinityGroupGetResponse.HostedServiceReference>();
        this.storageServices = new ArrayList<AffinityGroupGetResponse.StorageServiceReference>();
    }
    
    /**
    * Reference to a hosted service associated with an affinity group.
    */
    public static class HostedServiceReference
    {
        private String serviceName;
        
        /**
        * The name of the hosted service.
        */
        public String getServiceName() { return this.serviceName; }
        
        /**
        * The name of the hosted service.
        */
        public void setServiceName(String serviceName) { this.serviceName = serviceName; }
        
        private URI uri;
        
        /**
        * The Service Management API request URI used to perform Get Hosted
        * Service Properties requests against the hosted service.
        */
        public URI getUri() { return this.uri; }
        
        /**
        * The Service Management API request URI used to perform Get Hosted
        * Service Properties requests against the hosted service.
        */
        public void setUri(URI uri) { this.uri = uri; }
        
        /**
        * Initializes a new instance of the HostedServiceReference class.
        *
        */
        public HostedServiceReference()
        {
        }
    }
    
    /**
    * Reference to a storage service associated with an affinity group.
    */
    public static class StorageServiceReference
    {
        private String serviceName;
        
        /**
        * The user supplied name of the storage account.
        */
        public String getServiceName() { return this.serviceName; }
        
        /**
        * The user supplied name of the storage account.
        */
        public void setServiceName(String serviceName) { this.serviceName = serviceName; }
        
        private URI uri;
        
        /**
        * The Service Management API request URI used to perform Get Storage
        * Account Properties requests against the storage account.
        */
        public URI getUri() { return this.uri; }
        
        /**
        * The Service Management API request URI used to perform Get Storage
        * Account Properties requests against the storage account.
        */
        public void setUri(URI uri) { this.uri = uri; }
        
        /**
        * Initializes a new instance of the StorageServiceReference class.
        *
        */
        public StorageServiceReference()
        {
        }
    }
}
