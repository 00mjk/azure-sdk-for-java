/**
 * 
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.scheduler.models;

import java.util.Calendar;

/**
 * Current status of the job.
 */
public class JobStatus
{
    private int executionCount;

    /**
     * Number of times this job has executed.
     */
    public int getExecutionCount()
    {
        return this.executionCount;
    }

    /**
     * Number of times this job has executed.
     */
    public void setExecutionCount(int executionCount)
    {
        this.executionCount = executionCount;
    }

    private int failureCount;

    /**
     * Number of times this job has failed.
     */
    public int getFailureCount()
    {
        return this.failureCount;
    }

    /**
     * Number of times this job has failed.
     */
    public void setFailureCount(int failureCount)
    {
        this.failureCount = failureCount;
    }

    private int faultedCount;

    /**
     * Number of faulted occurrences (occurrences that were retried and failed
     * as many times as the retry policy states).
     */
    public int getFaultedCount()
    {
        return this.faultedCount;
    }

    /**
     * Number of faulted occurrences (occurrences that were retried and failed
     * as many times as the retry policy states).
     */
    public void setFaultedCount(int faultedCount)
    {
        this.faultedCount = faultedCount;
    }

    private Calendar lastExecutionTime;

    /**
     * Time the last occurrence executed in ISO-8601 format. Could be empty if
     * job has not run yet.
     */
    public Calendar getLastExecutionTime()
    {
        return this.lastExecutionTime;
    }

    /**
     * Time the last occurrence executed in ISO-8601 format. Could be empty if
     * job has not run yet.
     */
    public void setLastExecutionTime(Calendar lastExecutionTime)
    {
        this.lastExecutionTime = lastExecutionTime;
    }

    private Calendar nextExecutionTime;

    /**
     * Time of the next occurrence in ISO-8601 format. Could be empty if the job
     * is completed.
     */
    public Calendar getNextExecutionTime()
    {
        return this.nextExecutionTime;
    }

    /**
     * Time of the next occurrence in ISO-8601 format. Could be empty if the job
     * is completed.
     */
    public void setNextExecutionTime(Calendar nextExecutionTime)
    {
        this.nextExecutionTime = nextExecutionTime;
    }

    /**
     * Initializes a new instance of the JobStatus class.
     * 
     */
    public JobStatus()
    {
    }
}
