// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.scheduler.models;

/**
* Parameters supplied to the Get Job History operation.
*/
public class JobGetHistoryParameters
{
    private Integer skip;
    
    /**
    * By default the top 100 history entries will be returned in a call to GET
    * job history. A maximum of 1000 history entries can be returned in any
    * call.  To get history entries beyond 1000 entries use $skip.
    */
    public Integer getSkip() { return this.skip; }
    
    /**
    * By default the top 100 history entries will be returned in a call to GET
    * job history. A maximum of 1000 history entries can be returned in any
    * call.  To get history entries beyond 1000 entries use $skip.
    */
    public void setSkip(Integer skip) { this.skip = skip; }
    
    private JobState state;
    
    /**
    * Filter the job history to have it only return job histories of a
    * particular state.
    */
    public JobState getState() { return this.state; }
    
    /**
    * Filter the job history to have it only return job histories of a
    * particular state.
    */
    public void setState(JobState state) { this.state = state; }
    
    private Integer top;
    
    /**
    * To receive more or less than the default number of entries in a call then
    * use the $top OData operation.
    */
    public Integer getTop() { return this.top; }
    
    /**
    * To receive more or less than the default number of entries in a call then
    * use the $top OData operation.
    */
    public void setTop(Integer top) { this.top = top; }
    
    /**
    * Initializes a new instance of the JobGetHistoryParameters class.
    *
    */
    public JobGetHistoryParameters()
    {
    }
}
