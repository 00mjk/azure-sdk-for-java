/**
 * 
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.websites.models;

import java.util.ArrayList;
import java.util.Calendar;

/**
* The Get Web Site Historical Usage Metrics parameters.
*/
public class WebSiteGetHistoricalUsageMetricsParameters
{
    private Calendar endTime;
    
    /**
    * The ending time of the metrics to return. If this parameter is not
    * specified, the current time is used.
    */
    public Calendar getEndTime() { return this.endTime; }
    
    /**
    * The ending time of the metrics to return. If this parameter is not
    * specified, the current time is used.
    */
    public void setEndTime(Calendar endTime) { this.endTime = endTime; }
    
    private ArrayList<String> metricNames;
    
    /**
    * Specifies a comma-separated list of the names of the metrics to return.
    * If the names parameter is not specified, then all available metrics are
    * returned.
    */
    public ArrayList<String> getMetricNames() { return this.metricNames; }
    
    /**
    * Specifies a comma-separated list of the names of the metrics to return.
    * If the names parameter is not specified, then all available metrics are
    * returned.
    */
    public void setMetricNames(ArrayList<String> metricNames) { this.metricNames = metricNames; }
    
    private Calendar startTime;
    
    /**
    * The starting time of the metrics to return. If this parameter is not
    * specified, the beginning of the current hour is used.
    */
    public Calendar getStartTime() { return this.startTime; }
    
    /**
    * The starting time of the metrics to return. If this parameter is not
    * specified, the beginning of the current hour is used.
    */
    public void setStartTime(Calendar startTime) { this.startTime = startTime; }
    
    /**
    * Initializes a new instance of the
    * WebSiteGetHistoricalUsageMetricsParameters class.
    *
    */
    public WebSiteGetHistoricalUsageMetricsParameters()
    {
        this.metricNames = new ArrayList<String>();
    }
}
