// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.monitoring.metrics.models;

import java.util.ArrayList;
import javax.xml.datatype.Duration;

/**
* A metric definition.
*/
public class MetricDefinition
{
    private String displayName;
    
    /**
    * Metric definition display name.
    */
    public String getDisplayName() { return this.displayName; }
    
    /**
    * Metric definition display name.
    */
    public void setDisplayName(String displayName) { this.displayName = displayName; }
    
    private boolean isAlertable;
    
    /**
    * Metric definition is alertable.
    */
    public boolean getIsAlertable() { return this.isAlertable; }
    
    /**
    * Metric definition is alertable.
    */
    public void setIsAlertable(boolean isAlertable) { this.isAlertable = isAlertable; }
    
    private ArrayList<MetricAvailability> metricAvailabilities;
    
    /**
    * Metric definition metric availabilities.
    */
    public ArrayList<MetricAvailability> getMetricAvailabilities() { return this.metricAvailabilities; }
    
    /**
    * Metric definition metric availabilities.
    */
    public void setMetricAvailabilities(ArrayList<MetricAvailability> metricAvailabilities) { this.metricAvailabilities = metricAvailabilities; }
    
    private Duration minimumAlertableTimeWindow;
    
    /**
    * Metric definition minimum alertable time window.
    */
    public Duration getMinimumAlertableTimeWindow() { return this.minimumAlertableTimeWindow; }
    
    /**
    * Metric definition minimum alertable time window.
    */
    public void setMinimumAlertableTimeWindow(Duration minimumAlertableTimeWindow) { this.minimumAlertableTimeWindow = minimumAlertableTimeWindow; }
    
    private String name;
    
    /**
    * Metric definition name.
    */
    public String getName() { return this.name; }
    
    /**
    * Metric definition name.
    */
    public void setName(String name) { this.name = name; }
    
    private String namespace;
    
    /**
    * Metric definition namespace.
    */
    public String getNamespace() { return this.namespace; }
    
    /**
    * Metric definition namespace.
    */
    public void setNamespace(String namespace) { this.namespace = namespace; }
    
    private String primaryAggregation;
    
    /**
    * Metric definition primary aggregation.
    */
    public String getPrimaryAggregation() { return this.primaryAggregation; }
    
    /**
    * Metric definition primary aggregation.
    */
    public void setPrimaryAggregation(String primaryAggregation) { this.primaryAggregation = primaryAggregation; }
    
    private String resourceIdSuffix;
    
    /**
    * Metric definition resource id suffix.
    */
    public String getResourceIdSuffix() { return this.resourceIdSuffix; }
    
    /**
    * Metric definition resource id suffix.
    */
    public void setResourceIdSuffix(String resourceIdSuffix) { this.resourceIdSuffix = resourceIdSuffix; }
    
    private String unit;
    
    /**
    * Metric definition unit.
    */
    public String getUnit() { return this.unit; }
    
    /**
    * Metric definition unit.
    */
    public void setUnit(String unit) { this.unit = unit; }
    
    /**
    * Initializes a new instance of the MetricDefinition class.
    *
    */
    public MetricDefinition()
    {
        this.metricAvailabilities = new ArrayList<MetricAvailability>();
    }
}
