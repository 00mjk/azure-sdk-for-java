/**
 * 
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.azure.management.sql.models;

import java.util.HashMap;

/**
* Create or update database parameters.
*/
public class DatabaseCreateOrUpdateParameters extends CreateUpdateBase {
    private DatabaseCreateOrUpdateProperties properties;
    
    /**
    * Required. Gets or sets the properties of the request.
    * @return The Properties value.
    */
    public DatabaseCreateOrUpdateProperties getProperties() {
        return this.properties;
    }
    
    /**
    * Required. Gets or sets the properties of the request.
    * @param propertiesValue The Properties value.
    */
    public void setProperties(final DatabaseCreateOrUpdateProperties propertiesValue) {
        this.properties = propertiesValue;
    }
    
    /**
    * Initializes a new instance of the DatabaseCreateOrUpdateParameters class.
    *
    */
    public DatabaseCreateOrUpdateParameters() {
        super();
    }
    
    /**
    * Initializes a new instance of the DatabaseCreateOrUpdateParameters class
    * with required arguments.
    *
    */
    public DatabaseCreateOrUpdateParameters(DatabaseCreateOrUpdateProperties properties, String location, HashMap<String, String> tags) {
        this();
        if (properties == null) {
            throw new NullPointerException("properties");
        }
        if (location == null) {
            throw new NullPointerException("location");
        }
        if (tags == null) {
            throw new NullPointerException("tags");
        }
        this.setProperties(properties);
        this.setLocation(location);
        this.setTags(tags);
    }
}
